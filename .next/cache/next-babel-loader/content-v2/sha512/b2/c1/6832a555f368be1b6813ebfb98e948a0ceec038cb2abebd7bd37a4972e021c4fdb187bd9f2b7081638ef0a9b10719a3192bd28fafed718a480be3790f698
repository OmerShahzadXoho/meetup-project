{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/omershehzad/Downloads/next-course/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from 'next/head';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Add your own meetups and create amazing networking opportunities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mmongodb+srv://omer:omer123@cluster0.mc5ss.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mmongodb+srv://omer:omer123@cluster0.mc5ss.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/omershehzad/Downloads/next-course/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","Head","MeetupDetails","props","meetupData","title","image","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,OAAO,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,YAAD;AACI,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAD5B;AAEI,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAF5B;AAGI,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBG,OAH9B;AAII,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAiBH;;AACD,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACjB,4FADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC5BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADN;AADoB,KAAb,CAAZ;AAFJ,GAAP;AAQH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACjB,4FADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AAAf,GAA1B,CAA7B;AACAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHhB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR2B,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADI;AAERrB,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAFd;AAGRE,QAAAA,OAAO,EAAEsB,cAAc,CAACtB,OAHhB;AAIRD,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAJd;AAKRE,QAAAA,WAAW,EAAEqB,cAAc,CAACrB;AALpB;AADT;AADJ,GAAP;AAYH;AACD,eAAeN,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from 'next/head'\n\nfunction MeetupDetails(props) {\n    return (\n        <>\n            <Head>\n                <title>{props.meetupData.title}</title>\n                <meta\n                    name=\"description\"\n                    content=\"Add your own meetups and create amazing networking opportunities\"\n                />\n            </Head>\n            <MeetupDetail\n                image={props.meetupData.image}\n                title={props.meetupData.title}\n                address={props.meetupData.address}\n                description={props.meetupData.description}\n            />\n        </>\n    );\n}\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect(\n        \"mmongodb+srv://omer:omer123@cluster0.mc5ss.mongodb.net/meetups?retryWrites=true&w=majority\"\n    );\n    const db = client.db();\n    const meetupsCollection = db.collection(\"meetups\");\n\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n    client.close();\n    return {\n        fallback: false,\n        paths: meetups.map((meetup) => ({\n            params: {\n                meetupId: meetup._id.toString(),\n            },\n        })),\n    };\n}\n\nexport async function getStaticProps(context) {\n    //fetch data for single meetup\n\n    const meetupId = context.params.meetupId;\n    const client = await MongoClient.connect(\n        \"mmongodb+srv://omer:omer123@cluster0.mc5ss.mongodb.net/meetups?retryWrites=true&w=majority\"\n    );\n    const db = client.db();\n    const meetupsCollection = db.collection(\"meetups\");\n\n    const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n    client.close();\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.title,\n                address: selectedMeetup.address,\n                image: selectedMeetup.image,\n                description: selectedMeetup.description,\n\n            },\n        },\n    };\n}\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}